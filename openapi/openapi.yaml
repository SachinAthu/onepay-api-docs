openapi: 3.1.0
info:
  version: 1.0.0
  title: Onepay.lk
  termsOfService: 'https://example.com/terms/'
  contact:
    email: info@onepay.lk
    url: 'https://www.onepay.lk/contactus.html'
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  x-logo:
    url: 'https://onepayserviceimages.s3.ap-southeast-1.amazonaws.com/onepay_gateway_logo/1625655550.024874.png'
  description:
    $ref: ./info-description.md
tags:
  # - name: Payment
  #   description: 
  #     $ref: ./components/descriptions/payment.md
  - name: Request Single Transaction
  - name: Recurring Transactions
  # - name: Echo
  #   description: Example echo operations.
  # - name: User
  #   description: Operations about users.
  # - name: Tag
  #   description: This is a tag description.
servers:
  - url: 'https://merchant-api-development.onepay.lk'
    description: 'Development server' 
  - url: 'https://merchant-api-uat-v2.onepay.lk'
    description: 'UAT server'
  - url: 'https://merchant-api-live-v2.onepay.lk'
    description: 'Production server'
paths:
  # /api/ipg/gateway/request-transaction:
  #   $ref: paths/payment.yaml
  /api/ipg/single-transaction:
    $ref: paths/basic-transaction.yaml
  /api/ipg/recurring-transaction:
    $ref: paths/recurring-transaction.yaml
  /api/ipg/gateway/request-transaction-status:
    $ref: paths/transaction-status-check.yaml
  /api/user/ipg/auth:
    $ref: paths/authentication.yaml
  /api/ipg/gateway/customers:
    $ref: paths/get-customer-list.yaml
  /api/ipg/gateway/deals:
    $ref: paths/get-customer-deals.yaml
  # '/users/{username}':
  #   $ref: 'paths/users_{username}.yaml'
  # /echo:
  #   $ref: paths/echo.yaml
  # /pathItem:
  #   $ref: paths/path-item.yaml
  # /pathItemWithExamples:
  #   $ref: paths/path-item-with-examples.yaml
components:
  securitySchemes:
    main_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: 'http://example.com/api/oauth/dialog'
          scopes:
            'read:users': read users info
            'write:users': modify or remove users
    api_key:
      type: apiKey
      in: header
      name: api_key
    basic_auth:
      type: http
      scheme: basic
    jwt:
      description: Generated JWT when you log in.
      type: http
      scheme: bearer
      bearerFormat: JWT
